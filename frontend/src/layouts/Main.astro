---
import { Home, Trophy, HandCoins, Settings, Users } from 'lucide-react'

import { getSession } from 'auth-astro/server'
import { CommandBox } from '@/components/layout/CommandBox.tsx'
import { Badge } from '@/components/ui/badge.tsx'
import { Button } from '@/components/ui/button.tsx'
import { SideMenu } from '../components/layout/SideMenu.tsx'
import { UserMenu } from '@/components/layout/UserMenu.tsx'
import { Bell, SquareLibrary } from 'lucide-react'
import { cn } from '../lib/utils'

const navItems = [
  {
    title: 'Domů',
    href: '/',
    icon: Home,
  },
  {
    title: 'Závody',
    href: '/#',
    icon: Trophy,
    badge: true,
  },
  {
    title: 'Finance',
    href: '/#',
    icon: HandCoins,
  },
  {
    title: 'Členové',
    href: '/members',
    icon: Users,
  },
  {
    title: 'Nastavení',
    href: '/settings/profile',
    icon: Settings,
  },
]
const { pathname } = Astro.url

const session = await getSession(Astro.request)
const userName = session?.user?.name!
---

<div
  class="grid min-h-screen w-full md:grid-cols-[220px_1fr] lg:grid-cols-[280px_1fr]"
>
  <div class="hidden border-r bg-muted/40 md:block">
    <div class="flex h-full max-h-screen flex-col gap-2">
      <div class="flex h-14 items-center border-b px-4 lg:h-[60px] lg:px-6">
        <div class="flex items-center gap-2 font-semibold">
          <SquareLibrary className="h-6 w-6" />
          <span>Klabis</span>
        </div>
        <Button variant="outline" size="icon" className="ml-auto h-8 w-8">
          <Bell className="h-4 w-4" />
          <span class="sr-only">Toggle notifications</span>
        </Button>
      </div>
      <div class="flex-1">
        <nav class="grid items-start px-2 text-sm font-medium lg:px-4">
          {
            navItems.map((item) => (
              <a
                href={item.href}
                class={cn(
                  'flex items-center gap-3 rounded-lg px-3 py-2 transition-all hover:text-primary',
                  {
                    'bg-muted': item.href === pathname,
                    'text-muted-foreground': item.href !== pathname,
                  },
                )}
              >
                {item.icon && <item.icon className="h-4 w-4" />}
                {item.title}
                {item.badge && (
                  <Badge className="ml-auto flex h-6 w-6 shrink-0 items-center justify-center rounded-full">
                    6
                  </Badge>
                )}
              </a>
            ))
          }
        </nav>
      </div>
    </div>
  </div>
  <div class="flex flex-col">
    <header
      class="flex h-14 items-center gap-4 border-b bg-muted/40 px-4 lg:h-[60px] lg:px-6"
    >
      <SideMenu client:load>
        <nav class="grid gap-2 text-lg font-medium">
          <a
            href="#"
            class="mb-4 flex items-center gap-2 text-lg font-semibold"
          >
            <SquareLibrary className="h-6 w-6" />
            <span>Klabis</span>
          </a>
          {
            navItems.map((item) => (
              <a
                href={item.href}
                class={cn(
                  'mx-[-0.65rem] flex items-center gap-4 rounded-xl px-3 py-2  hover:text-foreground',
                  {
                    'text-foreground': item.href === pathname,
                    'bg-muted': item.href === pathname,
                    'text-muted-foreground': item.href !== pathname,
                  },
                )}
              >
                {item.icon && <item.icon className="h-5 w-5" />}
                {item.title}
                {item.badge && (
                  <Badge className="ml-auto flex h-6 w-6 shrink-0 items-center justify-center rounded-full">
                    6
                  </Badge>
                )}
              </a>
            ))
          }
        </nav>
      </SideMenu>
      <div class="w-full flex-1">
        <CommandBox client:load />
      </div>
      <UserMenu name={userName} client:load />
    </header>
    <main class="flex flex-1 flex-col gap-4 p-4 lg:gap-6 lg:p-6">
      <!--<div class="flex items-center">-->
      <!--  <h1 class="text-lg font-semibold md:text-2xl">Inventory</h1>-->
      <!--</div>-->
      <!--<div-->
      <!--  class="flex flex-1 items-center justify-center rounded-lg border border-dashed shadow-sm"-->
      <!--&gt;-->
      <!--  <div class="flex flex-col items-center gap-1 text-center">-->
      <!--    <h3 class="text-2xl font-bold tracking-tight">-->
      <!--      You have no products-->
      <!--    </h3>-->
      <!--    <p class="text-sm text-muted-foreground">-->
      <!--      You can start selling as soon as you add a product.-->
      <!--    </p>-->
      <!--    <Button className="mt-4">Add Product</Button>-->
      <!--  </div>-->
      <!--</div>-->
      <slot />
    </main>
  </div>
</div>
